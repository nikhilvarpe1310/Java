//Student.java

package com.model;

public class Student {
	
	private int id;
	private String name;
	private String city;
	private double percentage;
	@Override
	public String toString() {
		return "Student [id=" + id + ", name=" + name + ", city=" + city + ", percentage=" + percentage + "]";
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public double getPercentage() {
		return percentage;
	}
	public void setPercentage(double percentage) {
		this.percentage = percentage;
	}
	

}


//StudentDao.java

package com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.model.Student;
import com.util.MyDatabase;

public class StudentDao {
	public int insertStudent(Student s)
	{
		int check = 0;
		String sql = "insert into student(name,city,percentage)values(?,?,?)";
		try(Connection con = MyDatabase.createConnection();
				PreparedStatement pst = con.prepareStatement(sql);) {
			pst.setString(1, s.getName());
			pst.setString(2, s.getCity());
			pst.setDouble(3, s.getPercentage());
			check = pst.executeUpdate();
			
		}catch(SQLException e){
			e.printStackTrace();
		}
		return check;
		
	}
	
	public int deleteStudentById(int id)
	{
		int check = 0;
		String sql = "delete from student where id=?";
		try(Connection con = MyDatabase.createConnection();
				PreparedStatement pst = con.prepareStatement(sql); ) {
			pst.setInt(1, id);
			check = pst.executeUpdate();
			
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return check;
	}
	public Student findStudentById(int id)
	{
		String sql = "select id,name,city,percentage from student where id=?";
		List<Student> list = new ArrayList();
		try(Connection con = MyDatabase.createConnection();
				PreparedStatement pst = con.prepareStatement(sql);){
			pst.setInt(1, id);
			ResultSet rs = pst.executeQuery();
			list.addAll(MyDatabase.studentRowMapper(rs));
			
		}catch(SQLException e)
		{
			e.printStackTrace();
		}
		return(!list.isEmpty())? list.get(0):null;
		
	}

	public List<Student> findAllStudent()
	{
		List<Student> list = new ArrayList();
		String sql = "select id,name,city,percentage from student";
		try(Connection con = MyDatabase.createConnection();
				PreparedStatement pst = con.prepareStatement(sql);
				ResultSet rs = pst.executeQuery();) {
			list.addAll(MyDatabase.studentRowMapper(rs));
			
		}catch(SQLException e)
		{
			e.printStackTrace();
		}
		return list;
	}

	public int updateStudent(Student s)
	{
		int check = 0;
		String sql ="update student set name=?,city=?,percentage=? where id=?";
		try (Connection con = MyDatabase.createConnection();
				PreparedStatement pst = con.prepareStatement(sql);){
			pst.setString(1, s.getName());
			pst.setString(2, s.getCity());
			pst.setDouble(3, s.getPercentage());
			pst.setInt(4, s.getId());
			check = pst.executeUpdate();
		}catch(SQLException e)
		{
			e.printStackTrace();
		}
		return check;
	}
}



//MyDatabase.java

package com.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.model.Student;

public class MyDatabase {
	
	public static Connection createConnection()
	{
		 Connection con = null;
		 try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jap77", "root", "");
		} catch (ClassNotFoundException | SQLException e) {
			
			e.printStackTrace();
		}
		 return con;
	}
	
	

			public static List<Student> studentRowMapper(ResultSet rs) throws SQLException
			{
				List<Student> list = new ArrayList();
				while(rs.next())
				{
					Student s1 = new Student();
					s1.setId(rs.getInt("id"));
					s1.setName(rs.getString("name"));
					s1.setCity(rs.getString("city"));
					s1.setPercentage(rs.getDouble("percentage"));
					list.add(s1);
				}
				return list;
			}
}


//App.java

//for insert
package com.demo;

import java.util.List;

import com.dao.StudentDao;
import com.model.Student;

public class App 
{
    public static void main( String[] args )
    {
    	StudentDao sd = new StudentDao();
    	
    	
    	Student s1 = new Student();
    	s1.setName("Mahi");
    	s1.setCity("Sangola");
    	s1.setPercentage(95.22);
    	System.out.println(sd.insertStudent(s1));
    }
}


//for delete

package com.demo;

import java.util.List;

import com.dao.StudentDao;
import com.model.Student;

public class App 
{
    public static void main( String[] args )
    {
    	StudentDao sd = new StudentDao();
    	
    	System.out.println(sd.deleteStudentById(4));
    }
}


//for find

package com.demo;

import java.util.List;

import com.dao.StudentDao;
import com.model.Student;

public class App 
{
    public static void main( String[] args )
    {
    	StudentDao sd = new StudentDao();
    	Student s1 =sd.findStudentById(2);
    	
    	System.out.println(s1);
    }
}


//for findAll

package com.demo;

import java.util.List;

import com.dao.StudentDao;
import com.model.Student;

public class App 
{
    public static void main( String[] args )
    {
    	StudentDao sd = new StudentDao();
    	List<Student> list = sd.findAllStudent();
    	for(Student s:list)
    		System.out.println(s);
    }
}


//for update

package com.demo;

import java.util.List;

import com.dao.StudentDao;
import com.model.Student;

public class App 
{
    public static void main( String[] args )
    {
    	StudentDao sd = new StudentDao();
    	Student s1 = sd.findStudentById(5);
    	s1.setName("chhannu");
    	System.out.println(sd.updateStudent(s1));
    }
}

