//Crud using Spring Hibernate Annotation

//MyConfiguration.java
package com.config;

import java.util.Properties;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBean;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
@ComponentScan(basePackages = {"com.dao","com.service"})
public class MyConfiguration {

	@Bean
	public LocalSessionFactoryBean l1()
	{
		LocalSessionFactoryBean l = new LocalSessionFactoryBean();
		l.setDataSource(d1());
		l.setHibernateProperties(p1());
		l.setPackagesToScan("com.model");
		return l;
	}
	
	private DriverManagerDataSource d1()
	{
		DriverManagerDataSource d = new DriverManagerDataSource();
		d.setDriverClassName("com.mysql.cj.jdbc.Driver");
		d.setUrl("jdbc:mysql://localhost:3306/jap77");
		d.setUsername("root");
		d.setPassword("");
		return d;
		
	}
	
	private Properties p1()
	{
		Properties p = new Properties();
		p.setProperty("hibernate.dialect", "org.hibernate.dialect.MySQL8Dialect");
		p.setProperty("hibernate.hbm2ddl.auto", "update");
		p.setProperty("hibernate.show_sql", "false");
		p.setProperty("hibernate.format_sql", "true");
		return p;
	}
	
	@Bean
	public HibernateTransactionManager h1()
	{
		HibernateTransactionManager h = new HibernateTransactionManager();
		h.setSessionFactory(l1().getObject());
		return h;
	}
}


//Student.java
package com.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Student {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String name;
	private String city;
	@Column(columnDefinition = "double(5,2)")
	private double percentage;
	@Override
	public String toString() {
		return "Student [id=" + id + ", name=" + name + ", city=" + city + ", percentage=" + percentage + "]";
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public double getPercentage() {
		return percentage;
	}
	public void setPercentage(double percentage) {
		this.percentage = percentage;
	}
	

}

//StudentDao.java
package com.dao;

import java.util.List;

import com.model.Student;

public interface StudentDao {
	
	int insertStudent(Student s);
	
	List<Student> findAllStudent();

}


//StudentService.java
package com.service;

import com.dao.StudentDao;

public interface StudentService extends StudentDao {

}


//StudentDaoImpl.java
package com.dao;

import java.util.List;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.model.Student;

@Repository 
public class StudentDaoImpl implements StudentDao {
	
	@Autowired
	private SessionFactory sf;

	@Override
	
	public int insertStudent(Student s) {
		return (int) sf.getCurrentSession().save(s);
	}

	@Override
	public List<Student> findAllStudent() {
		return sf.getCurrentSession().createCriteria(Student.class)
				.list();
				
	}

}


//StudentServiceImpl.java
package com.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dao.StudentDao;
import com.model.Student;

@Service 
@Transactional
public class StudentServiceImpl implements StudentService{
	
	@Autowired
	private StudentDao sd;

	@Override
	public int insertStudent(Student s) { 
		return sd.insertStudent(s);
	}

	@Override
	public List<Student> findAllStudent() {
		return sd.findAllStudent();
	}

}


//App.java
package com.demo;

import java.util.List;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.config.MyConfiguration;
import com.model.Student;
import com.service.StudentService;

public class App 
{
    public static void main( String[] args )
    {
        ApplicationContext context = new AnnotationConfigApplicationContext(MyConfiguration.class);
        
        StudentService ss = context.getBean(StudentService.class);
        
        List<Student> list = ss.findAllStudent();
        for(Student s:list)
        	System.out.println(s);
    }
}
